/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_icelandic_norwegian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define SETTINGS 5
#define SWITCHER 6
#define COD 7
// -----------------

&mt {
   //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

&sl {
    release-after-ms = <333>;
};

/ {
		macros {
				// sometimes my device thinks a modifier is being held down
				// pressing all modifiers fixes it.
				unstick: unstick {
					label = "ZM_unstick";
					compatible = "zmk,behavior-macro";
					#binding-cells = <0>;
					bindings
						= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
				};
		};

    conditional_layers {
        compatible = "zmk,conditional-layers";
        fnc_layer {
            if-layers = <SYM EXT>;
            then-layer = <FNC>;
        };
    };

    behaviors {
        g5tab: gui5_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "GUI5_TAB";
            #binding-cells = <0>;
            bindings = <&kp LG(N5)>, <&kp TAB>;
            mods = <(MOD_LALT|MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LALT|MOD_LGUI|MOD_LCTL)>;
        };

        symOrSym2: sym_or_sym2 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_OR_SYM2";
            #binding-cells = <0>;
            bindings = <&mo SYM>, <&mo SYM2>;
            mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
				// both right thumb keys
        combo_settings {
            timeout-ms = <150>;
            key-positions = <32 33>;
            bindings = <&mo SETTINGS>;
        };
				// both left thumb keys
				combo_switcher {
						timeout-ms = <150>;
						key-positions = <30 31>;
						bindings = <&mo SWITCHER>;
				};
    };

    keymap {
            compatible = "zmk,keymap";

        // Base alpha layer
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L &kp QUOT
		&kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
             &sl EXT &mt RSHIFT SPACE           &kp SPACE &symOrSym2
		>;
		};

        // Numbers and high frequency symbols
       		sym_layer {
		bindings = <
		&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
		&kp COLON &kp DOLLAR &kp LPAR &kp LBRC &kp LBKT  &kp EQUAL &kp QUESTION &kp HASH &kp PLUS &kp ASTRK
		&kp SEMI &kp PERCENT &kp RPAR &kp RBRC &kp RBKT 	&kp AT &kp EXCL &kp UNDER &kp MINUS &kp BSLH
					                                        &trans  &mo SYM2       &trans &trans
		>;
		};

        // Main modifiers and arrow keys
		    ext_layer {
		bindings = <
		&kp ESC  &none  &none  &none  &none    			        &kp PG_UP  &kp HOME &none &kp END &kp CAPS
		&sk LALT &sk LGUI  &sk LCTRL &sk LSHIFT  &kp TAB 			&kp PG_DN &kp LEFT  &kp UP  &kp RIGHT   &kp ENTER
		&kp LC(Z)  &kp LC(X) &kp LC(C) &kp LC(V) &none          &kp LC(BSPC) &kp BSPC &kp DOWN &kp DEL  &none
					                        &mo SWITCHER &kp LCTRL    &trans  &trans
		>;
		};

        // Function keys with modifiers
       		fnc_layer {
		bindings = <
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
		&sk LALT &sk LGUI &sk LCTRL &sk LSHIFT &kp TAB     &kp F11            &kp F12          &mt C_NEXT C_VOL_UP &kp C_BRI_INC &kp PRINTSCREEN
		&none  &none  &none  &none  &none                  &kp K_CONTEXT_MENU &kp C_PLAY_PAUSE &kp C_VOL_DN        &kp C_BRI_DEC &to COD
          				           &none &none              &none &none  
		>;
		};

        // Low frequency symbols.
       		symbols_2_layer {
		bindings = <
		&kp CARET &none &none &none &none         &none &kp NO_A &kp NO_O &none &none
		&kp GRAVE &kp TILDE &none &kp PIPE &kp AMPS         &kp IS_D &kp IS_T &kp IS_AE &kp IS_O &kp IS_ACCENT
		&none 	&none 	&none 	&none 	&kp LSHIFT					  &none &none &none &none &none
          				           												&none &none        	&none &none 
		>;
		};

        // Used to change the keyboard's settings.
       		settings_layer {
		bindings = <
		&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
		&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
		&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
          				     &none &none                         &none &none 
		>;
		};

		    // Used to switch between tabs, apps, etc.
				// TODO: change the right side to be like the EXT layer
				// TODO: and change left homerow to use &mt to make it similar to the homerow in other layers
				//       this is to enable moving windows with ctrl or shift + arrow keys
			 		switcher_layer {
		bindings = <
		&kp	LA(N1) &kp	LA(N2) &kp	LA(N3) &kp	LA(N4) &kp	LA(N5)												&kp PG_UP  &kp HOME &none &kp END &kp CAPS
		&mt LALT LG(N1) &mt LGUI LG(N2) &mt LCTRL LG(N3) &mt LSHIFT LG(N4) &g5tab					&kp PG_DN &kp LEFT  &kp UP  &kp RIGHT   &kp ENTER
		&kp	LC(N1) &kp	LC(N2) &kp	LC(N3) &kp	LC(N4) &kp	LC(N5)												&kp LC(BSPC) &kp BSPC &kp DOWN &kp DEL  &none
									     &none &none                         &trans &trans
		>;
		};

			 		cod_layer {
		bindings = <
		&mt TAB CAPS &kp N1 &kp N2 &mt N4 N3 &kp G                    &mt LA(F4) F4	&none	&none	&mt LA(F9) F9 &mt LA(F10) F10
		&kp LSHIFT   &kp A  &kp W  &kp D     &kp F                    &kp F2		&none	&none	&none			&kp X
		&kp LCTRL    &kp R  &kp S  &kp E     &kp Q                    &kp N3		&kp N4	&kp N5	&kp N6			&kp ESC
																   &kp C &kp SPACE                &none  &to BASE
		>;
		};
	};
};
